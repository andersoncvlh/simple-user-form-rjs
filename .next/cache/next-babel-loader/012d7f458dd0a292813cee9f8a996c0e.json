{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/andersoncm/ambiente_desenvolvimento/aprendizado/simple-user-form/src/pages/products/products.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Card, CardActionArea, CardActions, CardContent, Grid, makeStyles } from \"@material-ui/core\";\nimport { Switch } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  cardItem: {\n    maxWidth: 400\n  }\n});\n\nconst Products = props => {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Select what you want\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"p\",\n      gutterBottom: true,\n      children: [\"Estimated expense: R$ \", props.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 1,\n      children: props.products.map(product => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.cardItem,\n            children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  component: \"h2\",\n                  children: product.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  component: \"p\",\n                  children: [\"R$ \", product.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  component: \"p\",\n                  children: product.desc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: product.selected,\n                onChange: props.onChange,\n                color: \"primary\",\n                name: \"checkedProduto\",\n                inputProps: {\n                  \"aria-label\": \"primary checkbox\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, product.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticProps = async () => {\n  const response = await fetch(\"http://localhost:8181/api/v1/products\");\n  const data = await response.json();\n  console.log('Teste');\n  return {\n    props: {\n      products: data.products\n    },\n    revalidate: 5\n  };\n};\nexport default Products;\nexport class ProductStaticProps {\n  constructor() {\n    _defineProperty(this, \"products\", void 0);\n\n    _defineProperty(this, \"onChange\", void 0);\n\n    _defineProperty(this, \"price\", void 0);\n  }\n\n}\nexport class ProductDTO {\n  constructor() {\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"desc\", void 0);\n\n    _defineProperty(this, \"selected\", void 0);\n\n    _defineProperty(this, \"price\", void 0);\n  }\n\n}","map":{"version":3,"sources":["/home/andersoncm/ambiente_desenvolvimento/aprendizado/simple-user-form/src/pages/products/products.tsx"],"names":["React","Typography","Card","CardActionArea","CardActions","CardContent","Grid","makeStyles","Switch","useStyles","cardItem","maxWidth","Products","props","classes","price","products","map","product","name","desc","selected","onChange","getStaticProps","response","fetch","data","json","console","log","revalidate","ProductStaticProps","ProductDTO"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  Grid,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Switch } from \"@material-ui/core\";\nimport { GetStaticProps, NextPage } from \"next\";\n\nconst useStyles = makeStyles({\n  cardItem: {\n    maxWidth: 400,\n  },\n});\n\nconst Products: NextPage<ProductStaticProps> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Select what you want\n      </Typography>\n      <Typography component=\"p\" gutterBottom>\n        Estimated expense: R$ {props.price}\n      </Typography>\n      <Grid container direction=\"row\" spacing={1}>\n        {props.products.map((product: ProductDTO) => (\n          <React.Fragment key={product.name}>\n            <Grid item xs={12} sm={6} xl={12}>\n              <Card className={classes.cardItem}>\n                <CardActionArea>\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {product.name}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      R$ {product.price}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {product.desc}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions>\n                  <Switch\n                    checked={product.selected}\n                    onChange={props.onChange}\n                    color=\"primary\"\n                    name=\"checkedProduto\"\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                  />\n                </CardActions>\n              </Card>\n            </Grid>\n          </React.Fragment>\n        ))}\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport const getStaticProps: GetStaticProps = async () => {\n  const response = await fetch(\"http://localhost:8181/api/v1/products\");\n  const data = await response.json();\n  console.log('Teste');\n  return {\n    props: {\n      products: data.products,\n    },\n    revalidate: 5\n  };\n};\nexport default Products;\n\nexport class ProductStaticProps {\n  products?: ProductDTO[];\n  onChange!: (event: any) => any;\n  price!: number;\n}\n\nexport class ProductDTO {\n  name!: string;\n  desc!: string;\n  selected?: boolean;\n  price!: number;\n}\n"]},"metadata":{},"sourceType":"module"}