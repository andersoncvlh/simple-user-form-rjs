{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Card, CardActionArea, CardActions, CardContent, Grid, makeStyles } from \"@material-ui/core\";\nimport { Switch } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  cardItem: {\n    maxWidth: 400\n  }\n});\n\nconst Products = props => {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Select what you want\"\n    }), /*#__PURE__*/_jsxs(Typography, {\n      component: \"p\",\n      gutterBottom: true,\n      children: [\"Estimated expense: R$ \", props.price]\n    }), /*#__PURE__*/_jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 1,\n      children: props.products.map(product => /*#__PURE__*/_jsx(React.Fragment, {\n        children: /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          xl: 12,\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: classes.cardItem,\n            children: [/*#__PURE__*/_jsx(CardActionArea, {\n              children: /*#__PURE__*/_jsxs(CardContent, {\n                children: [/*#__PURE__*/_jsx(Typography, {\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  component: \"h2\",\n                  children: product.name\n                }), /*#__PURE__*/_jsxs(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  component: \"p\",\n                  children: [\"R$ \", product.price]\n                }), /*#__PURE__*/_jsx(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  component: \"p\",\n                  children: product.desc\n                })]\n              })\n            }), /*#__PURE__*/_jsx(CardActions, {\n              children: /*#__PURE__*/_jsx(Switch, {\n                checked: product.selected,\n                onChange: props.onChange,\n                color: \"primary\",\n                name: \"checkedProduto\",\n                inputProps: {\n                  \"aria-label\": \"primary checkbox\"\n                }\n              })\n            })]\n          })\n        })\n      }, product.name))\n    })]\n  });\n};\n\nexport const getStaticProps = async () => {\n  const response = await fetch(\"http://localhost:8181/api/v1/products\");\n  const data = await response.json();\n  console.log('Teste');\n  return {\n    props: {\n      products: data.products\n    },\n    revalidate: 5\n  };\n};\nexport default Products;\nexport class ProductStaticProps {\n  constructor() {\n    _defineProperty(this, \"products\", void 0);\n\n    _defineProperty(this, \"onChange\", void 0);\n\n    _defineProperty(this, \"price\", void 0);\n  }\n\n}\nexport class ProductDTO {\n  constructor() {\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"desc\", void 0);\n\n    _defineProperty(this, \"selected\", void 0);\n\n    _defineProperty(this, \"price\", void 0);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}